<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:websocket="http://www.springframework.org/schema/websocket"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!--&lt;!&ndash;加载属性文件  &ndash;&gt;-->
	<!--<context:property-placeholder location="classpath*:properties/*.properties" />-->
	<!--配置注解驱动  -->

	<mvc:annotation-driven/>
	<!--配置包扫描器  -->
	<context:component-scan base-package="org.game.controller,org.game.websocket"/>
	<!-- <import resource="classpath:mybatis/*.xml"/> -->
	<context:property-placeholder location="classpath:properties/resource.properties" ignore-unresolvable="true" />
	<mvc:default-servlet-handler/>
	<!-- spring-mvc jsp视图解析器 -->
	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如http果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/user/wait/**" />
			<bean class="org.game.interceptor.SnsapiUserInfoInterceptor"/>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
</beans>        